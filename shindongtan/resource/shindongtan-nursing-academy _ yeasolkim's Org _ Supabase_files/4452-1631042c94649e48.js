!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},t=(new e.Error).stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="fe50fd29-1f0f-449f-9d53-da4408ae4116",e._sentryDebugIdIdentifier="sentry-dbid-fe50fd29-1f0f-449f-9d53-da4408ae4116")}catch(e){}}();"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4452],{6579:(e,t,i)=>{i.d(t,{S5:()=>X,ns:()=>c,y0:()=>l});var s=i(70274),r=i(86692);let o=e=>atob(e.replace(/[-]/g,"+").replace(/[_]/g,"/")),n="http://json-schema.org/draft-07/schema#",E={$schema:n,type:"object",title:"Email",link:"https://supabase.com/docs/guides/auth/passwords",properties:{EXTERNAL_EMAIL_ENABLED:{title:"Enable Email provider",description:"This will enable Email based signup and login for your application",type:"boolean"},MAILER_AUTOCONFIRM:{title:"Confirm email",description:"Users will need to confirm their email address before signing in for the first time.",type:"boolean"},MAILER_SECURE_EMAIL_CHANGE_ENABLED:{title:"Secure email change",description:"Users will be required to confirm any email change on both the old email address and new email address.\n      If disabled, only the new email is required to confirm.",type:"boolean"},SECURITY_UPDATE_PASSWORD_REQUIRE_REAUTHENTICATION:{title:"Secure password change",description:"Users will need to be recently logged in to change their password without requiring reauthentication. (A user is considered recently logged in if the session was created within the last 24 hours.)\n      If disabled, a user can change their password at any time.",type:"boolean"},PASSWORD_HIBP_ENABLED:{title:"Prevent use of leaked passwords",description:"Rejects the use of known or easy to guess passwords on sign up or password change. Powered by the HaveIBeenPwned.org Pwned Passwords API.",type:"boolean"},PASSWORD_MIN_LENGTH:{title:"Minimum password length",type:"number",description:"Passwords shorter than this value will be rejected as weak. Minimum 6, recommended 8 or more.",units:"characters"},PASSWORD_REQUIRED_CHARACTERS:{type:"select",title:"Password Requirements",description:"Passwords that do not have at least one of each will be rejected as weak.",enum:[{label:"No required characters (default)",value:s.F},{label:"Letters and digits",value:"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"},{label:"Lowercase, uppercase letters and digits",value:"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789"},{label:"Lowercase, uppercase letters, digits and symbols (recommended)",value:"abcdefghijklmnopqrstuvwxyz:ABCDEFGHIJKLMNOPQRSTUVWXYZ:0123456789:!@#$%^&*()_+-=[]{};'\\\\:\"|<>?,./`~"}]},MAILER_OTP_EXP:{title:"Email OTP Expiration",type:"number",description:"Duration before an email otp / link expires.",units:"seconds"},MAILER_OTP_LENGTH:{title:"Email OTP Length",type:"number",description:"Number of digits in the email OTP",units:"number"}},validationSchema:(0,r.object)().shape({MAILER_OTP_EXP:(0,r.number)().min(0,"Must be more than 0").max(86400,"Must be no more than 86400").required("This is required"),MAILER_OTP_LENGTH:(0,r.number)().min(6,"Must be at least 6").max(10,"Must be no more than 10"),PASSWORD_MIN_LENGTH:(0,r.number)().min(6,"Must be greater or equal to 6.").required("This is required")}),misc:{iconKey:"email-icon2",helper:"To complete setup, add this authorisation callback URL to your app's configuration in the Apple Developer Console.\n            [Learn more](https://supabase.com/docs/guides/auth/social-login/auth-apple#configure-your-services-id)"}},a=(e,t)=>({is:(i,s)=>i&&s===t&&!e.HOOK_SEND_SMS_ENABLED}),l=e=>(0,r.object)().shape({EXTERNAL_PHONE_ENABLED:(0,r.boolean)().required(),SMS_PROVIDER:(0,r.string)(),SMS_TWILIO_ACCOUNT_SID:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"twilio"),then:e=>e.required("Twilio Account SID is required"),otherwise:e=>e}),SMS_TWILIO_AUTH_TOKEN:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"twilio"),then:e=>e.required("Twilio Auth Token is required"),otherwise:e=>e}),SMS_TWILIO_MESSAGE_SERVICE_SID:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"twilio"),then:e=>e.required("Twilio Message Service SID is required"),otherwise:e=>e}),SMS_TWILIO_VERIFY_ACCOUNT_SID:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"twilio_verify"),then:e=>e.required("Twilio Verify Account SID is required"),otherwise:e=>e}),SMS_TWILIO_VERIFY_AUTH_TOKEN:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"twilio_verify"),then:e=>e.required("Twilio Verify Auth Token is required"),otherwise:e=>e}),SMS_TWILIO_VERIFY_MESSAGE_SERVICE_SID:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"twilio_verify"),then:e=>e.required("Twilio Verify Service SID is required"),otherwise:e=>e}),SMS_MESSAGEBIRD_ACCESS_KEY:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"messagebird"),then:e=>e.required("Messagebird Access Key is required"),otherwise:e=>e}),SMS_MESSAGEBIRD_ORIGINATOR:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"messagebird"),then:e=>e.required("Messagebird Originator is required"),otherwise:e=>e}),SMS_TEXTLOCAL_API_KEY:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"textlocal"),then:e=>e.required("Textlocal API Key is required"),otherwise:e=>e}),SMS_TEXTLOCAL_SENDER:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"textlocal"),then:e=>e.required("Textlocal Sender is required"),otherwise:e=>e}),SMS_VONAGE_API_KEY:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"vonage"),then:e=>e.required("Vonage API is required"),otherwise:e=>e}),SMS_VONAGE_API_SECRET:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"vonage"),then:e=>e.required("Vonage API Secret is required"),otherwise:e=>e}),SMS_VONAGE_FROM:(0,r.string)().when(["EXTERNAL_PHONE_ENABLED","SMS_PROVIDER"],{...a(e,"vonage"),then:e=>e.required("Vonage From is required"),otherwise:e=>e}),SMS_OTP_EXP:(0,r.number)().min(0,"Must be more than 0").required("This is required"),SMS_OTP_LENGTH:(0,r.number)().min(6,"Must be 6 or more in length").required("This is required"),SMS_TEMPLATE:(0,r.string)().required("SMS template is required."),SMS_TEST_OTP:(0,r.string)().matches(/^\s*([0-9]{1,15}=[0-9]+)(\s*,\s*[0-9]{1,15}=[0-9]+)*\s*$/g,"Must be a comma-separated list of <phone number>=<OTP> pairs. Phone numbers should be in international format, without spaces, dashes or the + prefix. Example: 123456789=987654").trim().transform(e=>e.replace(/\s+/g,"")),SMS_TEST_OTP_VALID_UNTIL:(0,r.string)().when(["SMS_TEST_OTP"],{is:e=>!!e,then:e=>e.required("You must provide a valid until date."),otherwise:e=>e.transform(e=>"")})}),c={$schema:n,type:"object",title:"Phone",link:"https://supabase.com/docs/guides/auth/phone-login",properties:{EXTERNAL_PHONE_ENABLED:{title:"Enable Phone provider",description:"This will enable phone based login for your application",type:"boolean"},SMS_PROVIDER:{type:"select",title:"SMS provider",description:"External provider that will handle sending SMS messages",enum:[{label:"Twilio",value:"twilio",icon:"twilio-icon.svg"},{label:"Messagebird",value:"messagebird",icon:"messagebird-icon.svg"},{label:"Textlocal",value:"textlocal",icon:"textlocal-icon.png"},{label:"Vonage",value:"vonage",icon:"vonage-icon.svg"},{label:"Twilio Verify",value:"twilio_verify",icon:"twilio-icon.svg"}]},SMS_TWILIO_ACCOUNT_SID:{type:"string",title:"Twilio Account SID",show:{key:"SMS_PROVIDER",matches:["twilio"]}},SMS_TWILIO_AUTH_TOKEN:{type:"string",title:"Twilio Auth Token",isSecret:!0,show:{key:"SMS_PROVIDER",matches:["twilio"]}},SMS_TWILIO_MESSAGE_SERVICE_SID:{type:"string",title:"Twilio Message Service SID",show:{key:"SMS_PROVIDER",matches:["twilio"]}},SMS_TWILIO_CONTENT_SID:{type:"string",title:"Twilio Content SID (Optional, For WhatsApp Only)",show:{key:"SMS_PROVIDER",matches:["twilio"]}},SMS_TWILIO_VERIFY_ACCOUNT_SID:{type:"string",title:"Twilio Account SID",show:{key:"SMS_PROVIDER",matches:["twilio_verify"]}},SMS_TWILIO_VERIFY_AUTH_TOKEN:{type:"string",title:"Twilio Auth Token",isSecret:!0,show:{key:"SMS_PROVIDER",matches:["twilio_verify"]}},SMS_TWILIO_VERIFY_MESSAGE_SERVICE_SID:{type:"string",title:"Twilio Verify Service SID",show:{key:"SMS_PROVIDER",matches:["twilio_verify"]}},SMS_MESSAGEBIRD_ACCESS_KEY:{type:"string",title:"Messagebird Access Key",show:{key:"SMS_PROVIDER",matches:["messagebird"]}},SMS_MESSAGEBIRD_ORIGINATOR:{type:"string",title:"Messagebird Originator",show:{key:"SMS_PROVIDER",matches:["messagebird"]}},SMS_TEXTLOCAL_API_KEY:{type:"string",title:"Textlocal API Key",show:{key:"SMS_PROVIDER",matches:["textlocal"]}},SMS_TEXTLOCAL_SENDER:{type:"string",title:"Textlocal Sender",show:{key:"SMS_PROVIDER",matches:["textlocal"]}},SMS_VONAGE_API_KEY:{type:"string",title:"Vonage API Key",show:{key:"SMS_PROVIDER",matches:["vonage"]}},SMS_VONAGE_API_SECRET:{type:"string",title:"Vonage API Secret",show:{key:"SMS_PROVIDER",matches:["vonage"]}},SMS_VONAGE_FROM:{type:"string",title:"Vonage From",show:{key:"SMS_PROVIDER",matches:["vonage"]}},SMS_AUTOCONFIRM:{title:"Enable phone confirmations",type:"boolean",description:"Users will need to confirm their phone number before signing in."},SMS_OTP_EXP:{title:"SMS OTP Expiry",type:"number",description:"Duration before an SMS OTP expires",units:"seconds",show:{key:"SMS_PROVIDER",matches:["twilio","messagebird","textlocal","vonage"]}},SMS_OTP_LENGTH:{title:"SMS OTP Length",type:"number",description:"Number of digits in OTP",units:"digits",show:{key:"SMS_PROVIDER",matches:["twilio","messagebird","textlocal","vonage"]}},SMS_TEMPLATE:{title:"SMS Message",type:"multiline-string",description:"To format the OTP code use `{{ .Code }}`",show:{key:"SMS_PROVIDER",matches:["twilio","messagebird","textlocal","vonage"]}},SMS_TEST_OTP:{type:"string",title:"Test Phone Numbers and OTPs",description:"Register phone number and OTP combinations for testing as a comma separated list of <phone number>=<otp> pairs. Example: `18005550123=789012`"},SMS_TEST_OTP_VALID_UNTIL:{type:"datetime",title:"Test OTPs Valid Until",description:"Test phone number and OTP combinations won't be active past this date and time (local time zone).",show:{key:"SMS_TEST_OTP"}}},validationSchema:null,misc:{iconKey:"phone-icon4",helper:"To complete setup, add this authorisation callback URL to your app's configuration in the Apple Developer Console.\n            [Learn more](https://supabase.com/docs/guides/auth/social-login/auth-apple#configure-your-services-id)"}},_={$schema:n,type:"object",title:"Apple",link:"https://supabase.com/docs/guides/auth/social-login/auth-apple",properties:{EXTERNAL_APPLE_ENABLED:{title:"Enable Sign in with Apple",description:"Enables Sign in with Apple on the web using OAuth or natively within iOS, macOS, watchOS or tvOS apps.",type:"boolean"},EXTERNAL_APPLE_CLIENT_ID:{title:"Client IDs",description:"Comma separated list of allowed Apple app (Web, OAuth, iOS, macOS, watchOS, or tvOS) bundle IDs for native sign in, or service IDs for Sign in with Apple JS. [Learn more](https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_js)",type:"string"},EXTERNAL_APPLE_SECRET:{title:"Secret Key (for OAuth)",description:"Secret key used in the OAuth flow. [Learn more](https://supabase.com/docs/guides/auth/social-login/auth-apple#generate-a-client_secret)",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_APPLE_ENABLED:(0,r.boolean)().required(),EXTERNAL_APPLE_SECRET:(0,r.string)().when(["EXTERNAL_APPLE_ENABLED","EXTERNAL_APPLE_CLIENT_ID"],{is:(e,t)=>e&&!!t,then:e=>e.matches(/^[a-z0-9_-]+([.][a-z0-9_-]+){2}$/i,"Secret key should be a JWT.").test({message:"Secret key is not a correctly generated JWT.",test:e=>{if(!e)return!0;try{let t=e.split(".").map(e=>o(e)),i=JSON.parse(t[0]),s=JSON.parse(t[1]);return"object"==typeof i&&"object"==typeof s&&i&&s&&"ES256"===i.alg&&"https://appleid.apple.com"===s.aud}catch(e){return console.log(e),!1}}}).test({message:"Secret key expires in less than 7 days!",test:e=>{if(!e)return!0;try{let t=e.split(".").map(e=>o(e)),i=JSON.parse(t[1]);return Date.now()>i.exp-6048e5}catch(e){return console.log(e),!1}}})}).when(["EXTERNAL_APPLE_ENABLED","EXTERNAL_APPLE_CLIENT_ID"],{is:(e,t)=>e&&!t,then:e=>e.matches(/^$/,"Secret Key should only be set if Service ID for OAuth is provided.")}),EXTERNAL_APPLE_CLIENT_ID:(0,r.string)().matches(/^\S+$/,"Client IDs should not contain spaces.").matches(/^([a-z0-9-]+\.[a-z0-9-]+(\.[a-z0-9-]+)*(,[a-z0-9-]+\.[a-z0-9-]+(\.[a-z0-9-]+)*)*)$/i,"Invalid characters. Each ID should follow a reverse-domain style string (e.g. com.example.app). Use commas to separate multiple IDs.").when("EXTERNAL_APPLE_ENABLED",{is:!0,then:e=>e.required("At least one Client ID is required when Apple sign-in is enabled.")})}),misc:{iconKey:"apple-icon",requiresRedirect:!0,helper:"Register this callback URL when using Sign in with Apple on the web in the Apple Developer Center.\n            [Learn more](https://supabase.com/docs/guides/auth/social-login/auth-apple#configure-your-services-id)",alert:{title:"Apple OAuth secret keys expire every 6 months",description:"A new secret should be generated every 6 months, otherwise users on the web will not be able to sign in."}}},h={$schema:n,type:"object",title:"Azure",link:"https://supabase.com/docs/guides/auth/social-login/auth-azure",properties:{EXTERNAL_AZURE_ENABLED:{title:"Azure enabled",type:"boolean"},EXTERNAL_AZURE_CLIENT_ID:{title:"Application (client) ID",type:"string"},EXTERNAL_AZURE_SECRET:{title:"Secret Value",description:"Enter the data from Value, not the Secret ID. [Learn more](https://supabase.com/docs/guides/auth/social-login/auth-azure#obtain-a-secret-id)",type:"string",isSecret:!0},EXTERNAL_AZURE_URL:{title:"Azure Tenant URL",descriptionOptional:"Optional",type:"string"}},validationSchema:(0,r.object)().shape({EXTERNAL_AZURE_ENABLED:(0,r.boolean)().required(),EXTERNAL_AZURE_CLIENT_ID:(0,r.string)().when("EXTERNAL_AZURE_ENABLED",{is:!0,then:e=>e.required("Application (client) ID is required"),otherwise:e=>e}),EXTERNAL_AZURE_SECRET:(0,r.string)().when("EXTERNAL_AZURE_ENABLED",{is:!0,then:e=>e.required("Secret Value is required"),otherwise:e=>e}),EXTERNAL_AZURE_URL:(0,r.string)().matches((0,s.r)(),"Must be a valid URL").optional()}),misc:{iconKey:"microsoft-icon",requiresRedirect:!0}},A={$schema:n,type:"object",title:"Bitbucket",link:"https://supabase.com/docs/guides/auth/social-login/auth-bitbucket",properties:{EXTERNAL_BITBUCKET_ENABLED:{title:"Bitbucket enabled",type:"boolean"},EXTERNAL_BITBUCKET_CLIENT_ID:{title:"Key",type:"string"},EXTERNAL_BITBUCKET_SECRET:{title:"Secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_BITBUCKET_ENABLED:(0,r.boolean)().required(),EXTERNAL_BITBUCKET_CLIENT_ID:(0,r.string)().when("EXTERNAL_BITBUCKET_ENABLED",{is:!0,then:e=>e.required("Key is required"),otherwise:e=>e}),EXTERNAL_BITBUCKET_SECRET:(0,r.string)().when("EXTERNAL_BITBUCKET_ENABLED",{is:!0,then:e=>e.required("Secret is required"),otherwise:e=>e})}),misc:{iconKey:"bitbucket-icon",requiresRedirect:!0}},d={$schema:n,type:"object",title:"Discord",link:"https://supabase.com/docs/guides/auth/social-login/auth-discord?",properties:{EXTERNAL_DISCORD_ENABLED:{title:"Discord enabled",type:"boolean"},EXTERNAL_DISCORD_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_DISCORD_SECRET:{title:"Client Secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_DISCORD_ENABLED:(0,r.boolean)().required(),EXTERNAL_DISCORD_CLIENT_ID:(0,r.string)().when("EXTERNAL_DISCORD_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_DISCORD_SECRET:(0,r.string)().when("EXTERNAL_DISCORD_ENABLED",{is:!0,then:e=>e.required("Client Secret is required"),otherwise:e=>e})}),misc:{iconKey:"discord-icon",requiresRedirect:!0}},L={$schema:n,type:"object",title:"Facebook",link:"https://supabase.com/docs/guides/auth/social-login/auth-facebook",properties:{EXTERNAL_FACEBOOK_ENABLED:{title:"Facebook enabled",type:"boolean"},EXTERNAL_FACEBOOK_CLIENT_ID:{title:"Facebook client ID",type:"string"},EXTERNAL_FACEBOOK_SECRET:{title:"Facebook secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_FACEBOOK_ENABLED:(0,r.boolean)().required(),EXTERNAL_FACEBOOK_CLIENT_ID:(0,r.string)().when("EXTERNAL_FACEBOOK_ENABLED",{is:!0,then:e=>e.required('"Facebook client ID" is required'),otherwise:e=>e}),EXTERNAL_FACEBOOK_SECRET:(0,r.string)().when("EXTERNAL_FACEBOOK_ENABLED",{is:!0,then:e=>e.required('"Facebook secret" is required'),otherwise:e=>e})}),misc:{iconKey:"facebook-icon",requiresRedirect:!0}},T={$schema:n,type:"object",title:"Figma",link:"https://supabase.com/docs/guides/auth/social-login/auth-figma",properties:{EXTERNAL_FIGMA_ENABLED:{title:"Figma enabled",type:"boolean"},EXTERNAL_FIGMA_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_FIGMA_SECRET:{title:"Client Secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_FIGMA_ENABLED:(0,r.boolean)().required(),EXTERNAL_FIGMA_CLIENT_ID:(0,r.string)().when("EXTERNAL_FIGMA_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_FIGMA_SECRET:(0,r.string)().when("EXTERNAL_FIGMA_ENABLED",{is:!0,then:e=>e.required("Client Secret is required"),otherwise:e=>e})}),misc:{iconKey:"figma-icon",requiresRedirect:!0}},u={$schema:n,type:"object",title:"GitHub",link:"https://supabase.com/docs/guides/auth/social-login/auth-github",properties:{EXTERNAL_GITHUB_ENABLED:{title:"GitHub enabled",type:"boolean"},EXTERNAL_GITHUB_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_GITHUB_SECRET:{title:"Client Secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_GITHUB_ENABLED:(0,r.boolean)().required(),EXTERNAL_GITHUB_CLIENT_ID:(0,r.string)().when("EXTERNAL_GITHUB_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_GITHUB_SECRET:(0,r.string)().when("EXTERNAL_GITHUB_ENABLED",{is:!0,then:e=>e.required("Client Secret is required"),otherwise:e=>e})}),misc:{iconKey:"github-icon",requiresRedirect:!0}},p={$schema:n,type:"object",title:"GitLab",link:"https://supabase.com/docs/guides/auth/social-login/auth-gitlab",properties:{EXTERNAL_GITLAB_ENABLED:{title:"GitLab enabled",type:"boolean"},EXTERNAL_GITLAB_CLIENT_ID:{title:"Application ID",type:"string"},EXTERNAL_GITLAB_SECRET:{title:"Secret",type:"string",isSecret:!0},EXTERNAL_GITLAB_URL:{title:"Self Hosted GitLab URL",descriptionOptional:"Optional",type:"string"}},validationSchema:(0,r.object)().shape({EXTERNAL_GITLAB_ENABLED:(0,r.boolean)().required(),EXTERNAL_GITLAB_CLIENT_ID:(0,r.string)().when("EXTERNAL_GITLAB_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_GITLAB_SECRET:(0,r.string)().when("EXTERNAL_GITLAB_ENABLED",{is:!0,then:e=>e.required("Client Secret is required"),otherwise:e=>e}),EXTERNAL_GITLAB_URL:(0,r.string)().matches((0,s.r)(),"Must be a valid URL").optional()}),misc:{iconKey:"gitlab-icon",requiresRedirect:!0}},S={$schema:n,type:"object",title:"Google",link:"https://supabase.com/docs/guides/auth/social-login/auth-google",properties:{EXTERNAL_GOOGLE_ENABLED:{title:"Enable Sign in with Google",description:"Enables Sign in with Google on the web using OAuth or One Tap, or in Android apps or Chrome extensions.",type:"boolean"},EXTERNAL_GOOGLE_CLIENT_ID:{title:"Client IDs",description:"Comma-separated list of client IDs for Web, OAuth, Android apps, One Tap, and Chrome extensions.",type:"string"},EXTERNAL_GOOGLE_SECRET:{title:"Client Secret (for OAuth)",description:"Client Secret to use with the OAuth flow on the web.",type:"string",isSecret:!0},EXTERNAL_GOOGLE_SKIP_NONCE_CHECK:{title:"Skip nonce checks",description:"Allows ID tokens with any nonce to be accepted, which is less secure. Useful in situations where you don't have access to the nonce used to issue the ID token, such as with iOS.",type:"boolean"}},validationSchema:(0,r.object)().shape({EXTERNAL_GOOGLE_ENABLED:(0,r.boolean)().required(),EXTERNAL_GOOGLE_CLIENT_ID:(0,r.string)().matches(/^\S+$/,"Client IDs should not contain spaces.").matches(/^([a-z0-9-]+\.[a-z0-9-]+(\.[a-z0-9-]+)*(,[a-z0-9-]+\.[a-z0-9-]+(\.[a-z0-9-]+)*)*)$/i,"Invalid characters. Google Client IDs should be a comma-separated list of domain-like strings.").when("EXTERNAL_GOOGLE_ENABLED",{is:!0,then:e=>e.required("At least one Client ID is required when Google sign-in is enabled.")}),EXTERNAL_GOOGLE_SECRET:(0,r.string)().when("EXTERNAL_GOOGLE_ENABLED",{is:!0,then:e=>e.matches(/^[a-z0-9.\/_-]*$/i,"Invalid characters. Google OAuth Client Secrets usually contain letters, numbers, dots, dashes, and underscores.")}),EXTERNAL_GOOGLE_SKIP_NONCE_CHECK:(0,r.boolean)().required()}),misc:{iconKey:"google-icon",requiresRedirect:!0,helper:"Register this callback URL when using Sign-in with Google on the web using OAuth.\n            [Learn more](https://supabase.com/docs/guides/auth/social-login/auth-google#configure-your-services-id)"}},R={$schema:n,type:"object",title:"Kakao",link:"https://supabase.com/docs/guides/auth/social-login/auth-kakao",properties:{EXTERNAL_KAKAO_ENABLED:{title:"Kakao enabled",type:"boolean"},EXTERNAL_KAKAO_CLIENT_ID:{title:"REST API Key",type:"string"},EXTERNAL_KAKAO_SECRET:{title:"Client Secret Code",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_KAKAO_ENABLED:(0,r.boolean)().required(),EXTERNAL_KAKAO_CLIENT_ID:(0,r.string)().when("EXTERNAL_KAKAO_ENABLED",{is:!0,then:e=>e.required("REST API Key is required"),otherwise:e=>e}),EXTERNAL_KAKAO_SECRET:(0,r.string)().when("EXTERNAL_KAKAO_ENABLED",{is:!0,then:e=>e.required("Client Secret Code is required"),otherwise:e=>e})}),misc:{iconKey:"kakao-icon",requiresRedirect:!0}},N={$schema:n,type:"object",title:"KeyCloak",link:"https://supabase.com/docs/guides/auth/social-login/auth-keycloak",properties:{EXTERNAL_KEYCLOAK_ENABLED:{title:"Keycloak enabled",type:"boolean"},EXTERNAL_KEYCLOAK_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_KEYCLOAK_SECRET:{title:"Secret",type:"string",isSecret:!0},EXTERNAL_KEYCLOAK_URL:{title:"Realm URL",description:"",type:"string"}},validationSchema:(0,r.object)().shape({EXTERNAL_KEYCLOAK_ENABLED:(0,r.boolean)().required(),EXTERNAL_KEYCLOAK_CLIENT_ID:(0,r.string)().when("EXTERNAL_KEYCLOAK_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_KEYCLOAK_SECRET:(0,r.string)().when("EXTERNAL_KEYCLOAK_ENABLED",{is:!0,then:e=>e.required("Client secret is required"),otherwise:e=>e}),EXTERNAL_KEYCLOAK_URL:(0,r.string)().when("EXTERNAL_KEYCLOAK_ENABLED",{is:!0,then:e=>e.matches((0,s.r)(),"Must be a valid URL").required("Realm URL is required"),otherwise:e=>e.matches((0,s.r)(),"Must be a valid URL")})}),misc:{iconKey:"keycloak-icon",requiresRedirect:!0}},I={$schema:n,type:"object",key:"linkedin_oidc",title:"LinkedIn (OIDC)",link:"https://supabase.com/docs/guides/auth/social-login/auth-linkedin",properties:{EXTERNAL_LINKEDIN_OIDC_ENABLED:{title:"LinkedIn enabled",type:"boolean"},EXTERNAL_LINKEDIN_OIDC_CLIENT_ID:{title:"API Key",type:"string"},EXTERNAL_LINKEDIN_OIDC_SECRET:{title:"API Secret Key",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_LINKEDIN_OIDC_ENABLED:(0,r.boolean)().required(),EXTERNAL_LINKEDIN_OIDC_CLIENT_ID:(0,r.string)().when("EXTERNAL_LINKEDIN_OIDC_ENABLED",{is:!0,then:e=>e.required("API Key is required"),otherwise:e=>e}),EXTERNAL_LINKEDIN_OIDC_SECRET:(0,r.string)().when("EXTERNAL_LINKEDIN_OIDC_ENABLED",{is:!0,then:e=>e.required("API Secret Key is required"),otherwise:e=>e})}),misc:{iconKey:"linkedin-icon",requiresRedirect:!0}},g={$schema:n,type:"object",title:"Notion",link:"https://supabase.com/docs/guides/auth/social-login/auth-notion",properties:{EXTERNAL_NOTION_ENABLED:{title:"Notion enabled",type:"boolean"},EXTERNAL_NOTION_CLIENT_ID:{title:"OAuth client ID",type:"string"},EXTERNAL_NOTION_SECRET:{title:"OAuth client secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_NOTION_ENABLED:(0,r.boolean)().required(),EXTERNAL_NOTION_CLIENT_ID:(0,r.string)().when("EXTERNAL_NOTION_ENABLED",{is:!0,then:e=>e.required("OAuth client ID is required"),otherwise:e=>e}),EXTERNAL_NOTION_SECRET:(0,r.string)().when("EXTERNAL_NOTION_ENABLED",{is:!0,then:e=>e.required("OAuth client secret is required"),otherwise:e=>e})}),misc:{iconKey:"notion-icon",requiresRedirect:!0}},O={$schema:n,type:"object",title:"Twitch",link:"https://supabase.com/docs/guides/auth/social-login/auth-twitch",properties:{EXTERNAL_TWITCH_ENABLED:{title:"Twitch enabled",type:"boolean"},EXTERNAL_TWITCH_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_TWITCH_SECRET:{title:"Client secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_TWITCH_ENABLED:(0,r.boolean)().required(),EXTERNAL_TWITCH_CLIENT_ID:(0,r.string)().when("EXTERNAL_TWITCH_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_TWITCH_SECRET:(0,r.string)().when("EXTERNAL_TWITCH_ENABLED",{is:!0,then:e=>e.required("Client secret is required"),otherwise:e=>e})}),misc:{iconKey:"twitch-icon",requiresRedirect:!0}},D={$schema:n,type:"object",title:"Twitter",link:"https://supabase.com/docs/guides/auth/social-login/auth-twitter",properties:{EXTERNAL_TWITTER_ENABLED:{title:"Twitter enabled",type:"boolean"},EXTERNAL_TWITTER_CLIENT_ID:{title:"API Key",type:"string"},EXTERNAL_TWITTER_SECRET:{title:"API Secret Key",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_TWITTER_ENABLED:(0,r.boolean)().required(),EXTERNAL_TWITTER_CLIENT_ID:(0,r.string)().when("EXTERNAL_TWITTER_ENABLED",{is:!0,then:e=>e.required("API Key is required"),otherwise:e=>e}),EXTERNAL_TWITTER_SECRET:(0,r.string)().when("EXTERNAL_TWITTER_ENABLED",{is:!0,then:e=>e.required("API Secret Key is required"),otherwise:e=>e})}),misc:{iconKey:"twitter-icon",requiresRedirect:!0}},b={$schema:n,type:"object",title:"Slack (Deprecated)",link:"https://supabase.com/docs/guides/auth/social-login/auth-slack",properties:{EXTERNAL_SLACK_ENABLED:{title:"Slack enabled",type:"boolean"},EXTERNAL_SLACK_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_SLACK_SECRET:{title:"Client Secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_SLACK_ENABLED:(0,r.boolean)().required(),EXTERNAL_SLACK_CLIENT_ID:(0,r.string)().when("EXTERNAL_SLACK_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_SLACK_SECRET:(0,r.string)().when("EXTERNAL_SLACK_ENABLED",{is:!0,then:e=>e.required("Client Secret is required"),otherwise:e=>e})}),misc:{iconKey:"slack-icon",requiresRedirect:!0}},m={$schema:n,type:"object",title:"Slack (OIDC)",key:"slack_oidc",link:"https://supabase.com/docs/guides/auth/social-login/auth-slack",properties:{EXTERNAL_SLACK_OIDC_ENABLED:{title:"Slack enabled",type:"boolean"},EXTERNAL_SLACK_OIDC_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_SLACK_OIDC_SECRET:{title:"Client Secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_SLACK_OIDC_ENABLED:(0,r.boolean)().required(),EXTERNAL_SLACK_OIDC_CLIENT_ID:(0,r.string)().when("EXTERNAL_SLACK_OIDC_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_SLACK_OIDC_SECRET:(0,r.string)().when("EXTERNAL_SLACK_OIDC_ENABLED",{is:!0,then:e=>e.required("Client Secret is required"),otherwise:e=>e})}),misc:{iconKey:"slack-icon",requiresRedirect:!0}},w={$schema:n,type:"object",title:"Spotify",link:"https://supabase.com/docs/guides/auth/social-login/auth-spotify",properties:{EXTERNAL_SPOTIFY_ENABLED:{title:"Spotify enabled",type:"boolean"},EXTERNAL_SPOTIFY_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_SPOTIFY_SECRET:{title:"Client Secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_SPOTIFY_ENABLED:(0,r.boolean)().required(),EXTERNAL_SPOTIFY_CLIENT_ID:(0,r.string)().when("EXTERNAL_SPOTIFY_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_SPOTIFY_SECRET:(0,r.string)().when("EXTERNAL_SPOTIFY_ENABLED",{is:!0,then:e=>e.required("Client Secret is required"),otherwise:e=>e})}),misc:{iconKey:"spotify-icon",requiresRedirect:!0}},C={$schema:n,type:"object",title:"WorkOS",link:"https://supabase.com/docs/guides/auth/social-login/auth-workos",properties:{EXTERNAL_WORKOS_ENABLED:{title:"WorkOS enabled",type:"boolean"},EXTERNAL_WORKOS_URL:{title:"WorkOS URL",type:"string"},EXTERNAL_WORKOS_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_WORKOS_SECRET:{title:"Secret Key",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_WORKOS_ENABLED:(0,r.boolean)().required(),EXTERNAL_WORKOS_URL:(0,r.string)().matches((0,s.r)(),"Must be a valid URL").when("EXTERNAL_WORKOS_ENABLED",{is:!0,then:e=>e.required("WorkOS URL is required"),otherwise:e=>e}),EXTERNAL_WORKOS_CLIENT_ID:(0,r.string)().when("EXTERNAL_WORKOS_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_WORKOS_SECRET:(0,r.string)().when("EXTERNAL_WORKOS_ENABLED",{is:!0,then:e=>e.required("Client Secret is required"),otherwise:e=>e})}),misc:{iconKey:"workos-icon",requiresRedirect:!0}},y={$schema:n,type:"object",title:"Zoom",link:"https://supabase.com/docs/guides/auth/social-login/auth-zoom",properties:{EXTERNAL_ZOOM_ENABLED:{title:"Zoom enabled",type:"boolean"},EXTERNAL_ZOOM_CLIENT_ID:{title:"Client ID",type:"string"},EXTERNAL_ZOOM_SECRET:{title:"Client secret",type:"string",isSecret:!0}},validationSchema:(0,r.object)().shape({EXTERNAL_ZOOM_ENABLED:(0,r.boolean)().required(),EXTERNAL_ZOOM_CLIENT_ID:(0,r.string)().when("EXTERNAL_ZOOM_ENABLED",{is:!0,then:e=>e.required("Client ID is required"),otherwise:e=>e}),EXTERNAL_ZOOM_SECRET:(0,r.string)().when("EXTERNAL_ZOOM_ENABLED",{is:!0,then:e=>e.required("Client secret is required"),otherwise:e=>e})}),misc:{iconKey:"zoom-icon",requiresRedirect:!0}},X=[E,c,{$schema:n,type:"object",title:"SAML 2.0",link:"https://supabase.com/docs/guides/auth/enterprise-sso/auth-sso-saml",properties:{SAML_ENABLED:{title:"Enable SAML 2.0 Single Sign-on",description:"You will need to use the [Supabase CLI](https://supabase.com/docs/guides/auth/sso/auth-sso-saml#managing-saml-20-connections) to set up SAML after enabling it",type:"boolean"},SAML_EXTERNAL_URL:{title:"SAML metadata URL",description:"You may use a different SAML metadata URL from what is defined with the API External URL. Please validate that your SAML External URL can reach the Custom Domain or Project URL.",descriptionOptional:"Optional",type:"string"},SAML_ALLOW_ENCRYPTED_ASSERTIONS:{title:"Allow encrypted SAML Assertions",description:"Some SAML Identity Providers require support for encrypted assertions. Usually this is not necessary.",descriptionOptional:"Optional",type:"boolean"}},validationSchema:(0,r.object)().shape({SAML_ENABLED:(0,r.boolean)().required(),SAML_EXTERNAL_URL:(0,r.string)().matches((0,s.r)(),"Must be a valid URL").optional(),SAML_ALLOW_ENCRYPTED_ASSERTIONS:(0,r.boolean)().optional()}),misc:{iconKey:"saml-icon"}},{$schema:n,type:"object",title:"Web3 Wallet (Solana)",link:"https://supabase.com/docs/guides/auth/auth-web3",properties:{EXTERNAL_WEB3_SOLANA_ENABLED:{title:"Enable Sign in with Solana",description:"Allow Solana wallet holders to sign in to your project via the Sign in with Solana (SIWS, EIP-4361) standard. Set up [attack protection](../auth/protection) and adjust [rate limits](../auth/rate-limits) to counter abuse.",type:"boolean"}},validationSchema:(0,r.object)().shape({EXTERNAL_WEB3_SOLANA_ENABLED:(0,r.boolean)().required()}),misc:{iconKey:"web3-icon"}},_,h,A,d,L,T,u,p,S,R,N,I,g,O,D,m,b,w,C,y]},25400:(e,t,i)=>{i.d(t,{$E:()=>c,kV:()=>a,op:()=>l});var s=i(56947),r=i(32144),o=i(40807),n=i(53239),E=i(69830);async function a(e,t){let{projectRef:i}=e;if(!i)throw Error("projectRef is required");let{data:s,error:r}=await (0,o.Jt)("/platform/auth/{ref}/config",{params:{path:{ref:i}},signal:t});return r&&(0,o.H4)(r),s}let l=function(e){let{projectRef:t}=e,{enabled:i=!0,...r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,s.I)(E.Z.authConfig(t),e=>{let{signal:i}=e;return a({projectRef:t},i)},{enabled:i&&void 0!==t,...r})},c=e=>{let{projectRef:t}=e,i=(0,r.jE)();return(0,n.useCallback)(()=>{t&&i.prefetchQuery(E.Z.authConfig(t),e=>{let{signal:i}=e;return a({projectRef:t},i)})},[i,t])}},70274:(e,t,i)=>{i.d(t,{F:()=>c,r:()=>l});let s=/^((ftp|http|https):\/\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_*-]+(\.[a-zA-Z0-9_*-]+)+((\/)[\w#]+)*(\/\w+\?[a-zA-Z0-9_]+=\w+(&[a-zA-Z0-9_]+=\w+)*)+(?:\.[a-z]+)*(?::\d+)?(?![^<]*(?:<\/\w+>|\/?>))(.*)?\/?(.)*?$/gm,r=/^[a-z0-9-]+([.][a-z0-9]+)*:\/(\/[-a-z0-9._~!$&'()*+,;=:@%]+)+(?:\.[a-z]+)*(?::\d+)?(?![^<]*(?:<\/\w+>|\/?>))(.*)?\/?(.)*?$/i,o=/^(?:^|\s)((https?:\/\/)?(?:localhost|[\w-]+(?:\.[\w-]+)+)(:\d+)?(\/\S*)?)/i,n=/chrome-extension:\/\/([a-zA-Z]*)/gm,E=/^([a-zA-Z][a-zA-Z0-9+.-]*):(?:\/{1,3})?([a-zA-Z0-9_.-]*)$/,a=/^[a-zA-Z0-9-]+\.[a-zA-Z]{2,}$/;function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{excludeSimpleDomains:!0},{excludeSimpleDomains:t}=e,i=t?"(?!".concat(a.source,")"):"";return RegExp("".concat(i,"((").concat(s.source,")|(").concat(o.source,")|(").concat(r.source,")|(").concat(n.source,")|(").concat(E.source,"))"),"i")}let c="NO_REQUIRED_CHARS"}}]);